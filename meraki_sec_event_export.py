import meraki
import getpass
import csv


def merakiError(e):
    """
    Function to print the error generated by Meraki's SDK during any API call made to via the SDK with a try logic attached.
    Args:
            e (String): Error message generated and formatted by the Meraki SDK.
    """
    print(f"Meraki API error: {e}")


def pythonError(e):
    """
    Function to print the error generated by Python during any API calls made with a try logic attached.
    Args:
            e (String): Python Error message.
    """
    print(f"Python API error: {e}")


def getMerakiOrgs():
    """
    function to get a list of Meraki Orgs the API key has access to 

    Returns:
        merakiOrgList (List): List of all Meraki Organizations that the API key has access to.
    """

    merakiOrgList = []

    try:
        merakiOrgList = dashboard.organizations.getOrganizations()
    except meraki.APIError as e:
        print(merakiError(e))
    except Exception as e:
        print(pythonError(e))

    return merakiOrgList


def getOrgSecEvents(orgId, orgName):
    """
    Function to get the security events for the past 31 days and append the Org Name onto them.

    Args:
        orgId (string): Org ID which the API call with call against.
        orgName (string): Org Name for the ID which the API call is against.

    Returns:
        secEvents (List): List of all security events
    """
    secEvents = []

    try:
        # Default time span is 31 days but you can add a timespan in seconds up to 365 days.
        secEvents = dashboard.appliance.getOrganizationApplianceSecurityEvents(
            organizationId=orgId, total_pages="all")
    except meraki.APIError as e:
        print(merakiError(e))
    except Exception as e:
        print(pythonError(e))

    # Append org name to each event
    for event in secEvents:
        event["orgName"] = orgName

    return secEvents


if "__main__" == __name__:

    """
    This is what is run when the file is run directly, this will setup the script, get a list of all Meraki Orgs your API key has access to
    along with pulling all security events for each Org before exporting the list to a CSV. 
    """

    # Setting up Meraki SDK
    apiKey = getpass.getpass(prompt="Please enter your Meraki API Key: ")

    dashboard = meraki.DashboardAPI(api_key=apiKey,
                                    print_console=False,
                                    log_path="",
                                    retry_4xx_error=True)

    # Setting up csv file
    exportFile = "sec_event_export.csv"
    exportFileHeaders = ["orgName", "ts", "eventType", "clientName", "clientMac", "clientIp", "srcIp", "destIp",
                         "protocol", "uri", "canonicalName", "destinationPort", "fileHash", "fileType",
                         "fileSizeBytes", "disposition", "action", "blocked", "ruleId", "priority", "signature",
                         "classification", "sigSource", "message", "deviceMac"]

    # Getting List of Orgs
    merakiOrgList = getMerakiOrgs()

    secEventList = []
    for org in merakiOrgList:
        orgName = org["name"]
        orgId = org["id"]

        sevEvents = getOrgSecEvents(orgId, orgName)
        for event in sevEvents:
            secEventList.append(event)

    with open(exportFile, "w") as csvoutput:
        csvfile = csv.DictWriter(csvoutput, delimiter=",",
                                 fieldnames=exportFileHeaders)
        csvfile.writeheader()

        for event in secEventList:
            csvfile.writerow(event)
